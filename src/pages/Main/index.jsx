import React from "react";
import {
  MainInfoContainer,
  MainBlockWrapper,
  BlockWrapper,
  Button,
  Header,
  Image1,
  Image3,
  InfoWrapper,
  Slider,
  Text,
  NextButtonWhite,
  NextButtonBlack,
} from "./index.styled";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/swiper.min.css";
import "swiper/modules/pagination/pagination.min.css";
import { EffectCoverflow, Autoplay } from "swiper";
import Scrollbar from "smooth-scrollbar";
import AnimatedPage from "../../components/AnimatedPage";

const Main = () => {
  const getOffsetToScroll = (id) => {
    const block = document.querySelector(id);
    const header = document.querySelector("#header");
    const offset =
      parseInt(
        window.getComputedStyle(block, null).getPropertyValue("padding-top")
      ) -
      parseInt(
        window.getComputedStyle(header, null).getPropertyValue("height")
      );
    return offset;
  };

  const handleClickNext = (id) => {
    Scrollbar.get(document.body).scrollIntoView(document.querySelector(id), {
      offsetLeft: 0,
      offsetTop: -getOffsetToScroll(id),
      alignToTop: true,
      onlyScrollIfNeeded: false,
    });
    console.log(Scrollbar.get(document.body));
  };

  return (
    <AnimatedPage>
      <MainBlockWrapper>
        <Image1 src="img/Photo1.svg" />
        <MainInfoContainer>
          <InfoWrapper>
            <Header>Нужен заголовок</Header>
            <Text>
              Сюда нужно что-то к записи. А то я не знаю как заполнить, не шарю
              в бровях
            </Text>
            <Button style={{ marginRight: "0", borderColor: "white" }}>
              ЗАПИСАТЬСЯ
            </Button>
          </InfoWrapper>
          <NextButtonWhite onClick={() => handleClickNext("#Section-1")}>
            <svg
              width="107"
              height="125"
              viewBox="0 0 107 125"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M54.5469 57C54.5469 56.1716 53.8753 55.5 53.0469 55.5C52.2184 55.5 51.5469 56.1716 51.5469 57L54.5469 57ZM51.9862 93.0607C52.572 93.6464 53.5218 93.6464 54.1075 93.0607L63.6535 83.5147C64.2393 82.9289 64.2393 81.9792 63.6535 81.3934C63.0677 80.8076 62.1179 80.8076 61.5322 81.3934L53.0469 89.8787L44.5616 81.3934C43.9758 80.8076 43.0261 80.8076 42.4403 81.3934C41.8545 81.9792 41.8545 82.9289 42.4403 83.5147L51.9862 93.0607ZM51.5469 57L51.5469 92L54.5469 92L54.5469 57L51.5469 57Z"
                fill="#151515"
              />

              <path
                d="M103.811 75C103.811 102.03 81.1159 124 53.0464 124C24.9769 124 2.28174 102.03 2.28174 75C2.28174 47.9705 24.9769 26 53.0464 26C81.1159 26 103.811 47.9705 103.811 75Z"
                stroke="#151515"
                stroke-width="2"
                fill="none"
              />
              <path
                d="M14.5258 38.2297L11.3923 34.2246L12.1496 33.6719C12.2287 33.2509 12.2182 32.7459 12.118 32.157C12.0186 31.5616 11.7721 30.851 11.3784 30.0252C10.9856 29.1929 10.3871 28.2091 9.58284 27.0736L6.05405 22.0564L13.0297 16.9646L21.0298 27.1898L22.3836 26.2016L25.4996 30.1843L24.1457 31.1726L21.9926 28.4205L13.709 34.467L15.8797 37.2415L14.5258 38.2297ZM13.8476 32.4324L19.6759 28.1781L12.6387 19.1834L8.30184 22.3491L10.9367 26.0854C11.5443 26.9542 12.0563 27.7699 12.4725 28.5323C12.8859 29.291 13.2069 29.997 13.4357 30.6503C13.6615 31.2999 13.7988 31.8939 13.8476 32.4324Z"
                fill="#151515"
              />
              <path
                d="M31.3075 24.3125C30.6593 24.5528 30.023 24.6499 29.3985 24.6037C28.7723 24.5532 28.212 24.3545 27.7177 24.0077C27.2216 23.6564 26.8424 23.1508 26.5801 22.4908C26.3493 21.91 26.2777 21.3964 26.3651 20.95C26.4509 20.4992 26.6458 20.0988 26.9499 19.7488C27.2539 19.3988 27.6189 19.0867 28.0449 18.8127C28.4735 18.5327 28.9131 18.2738 29.3637 18.0361C29.9537 17.7264 30.434 17.4802 30.8045 17.2974C31.1777 17.1086 31.433 16.9307 31.5704 16.7636C31.7122 16.5949 31.7333 16.3852 31.6336 16.1344L31.6126 16.0816C31.3539 15.4304 30.973 14.991 30.47 14.7635C29.9715 14.5343 29.3604 14.5539 28.6367 14.8222C27.8864 15.1003 27.3629 15.4812 27.0661 15.9648C26.7692 16.4484 26.6077 16.9071 26.5814 17.341L24.8799 17.3659C24.9015 16.6512 25.0661 16.0399 25.3737 15.5321C25.684 15.0182 26.0761 14.5952 26.5503 14.2629C27.0271 13.9246 27.5229 13.66 28.0379 13.4691C28.3665 13.3473 28.7596 13.247 29.2172 13.1682C29.6776 13.0833 30.1548 13.0856 30.6488 13.1751C31.1472 13.263 31.6249 13.4973 32.0818 13.8782C32.5388 14.2591 32.9272 14.8521 33.2472 15.6574L35.9013 22.3369L34.3297 22.9195L33.7842 21.5466L33.7043 21.5763C33.6851 21.8358 33.6011 22.137 33.4521 22.48C33.3032 22.823 33.0572 23.159 32.7143 23.4881C32.3713 23.8171 31.9024 24.092 31.3075 24.3125ZM30.9912 22.8244C31.6128 22.5939 32.0886 22.2787 32.4186 21.8787C32.7531 21.477 32.953 21.0445 33.0185 20.581C33.0883 20.1159 33.0393 19.6721 32.8715 19.2497L32.305 17.8241C32.2699 17.928 32.1522 18.0549 31.952 18.2048C31.7545 18.3487 31.5189 18.4992 31.2451 18.6562C30.974 18.8072 30.7078 18.9513 30.4466 19.0885C30.188 19.2197 29.9787 19.3276 29.8188 19.4122C29.4313 19.6164 29.0836 19.8437 28.7756 20.0942C28.4704 20.3386 28.2553 20.6178 28.1304 20.9316C28.0082 21.2394 28.0258 21.5913 28.1832 21.9874C28.3983 22.5286 28.7629 22.8629 29.277 22.9904C29.7939 23.1118 30.3653 23.0564 30.9912 22.8244Z"
                fill="#151515"
              />
              <path
                d="M39.9945 21.1474L39.7895 19.5984L40.1842 19.5497C40.5084 19.5097 40.7703 19.4129 40.9696 19.2595C41.1684 19.1014 41.3121 18.8522 41.2809 18.5121C41.4936 18.1667 41.5368 17.6986 41.5302 17.1079C41.5277 16.5119 41.483 15.7589 41.396 14.8489L40.9596 10.0367L48.1775 9.14538L49.609 19.9601L47.9455 20.1656L46.719 10.8998L42.7436 11.2807L43.0851 15.27C43.1649 16.1618 43.1885 16.9532 43.1558 17.6442C43.1271 18.3299 43.0208 18.9156 42.8367 19.401C42.6573 19.8859 42.3831 20.2681 42.0141 20.5474C41.6451 20.8267 41.1599 21.0035 40.5584 21.0778L39.9945 21.1474Z"
                fill="#151515"
              />
              <path
                d="M57.2096 13.0797L60.3151 13.4281C61.5855 13.5706 62.5185 14.0016 63.1139 14.7212C63.7093 15.4407 63.9477 16.2941 63.8289 17.2813C63.7509 17.93 63.5294 18.5031 63.1644 19.0005C62.7999 19.4932 62.3071 19.8643 61.6857 20.1139C61.065 20.3587 60.3311 20.4336 59.4841 20.3385L54.9388 19.8286L56.2412 8.99753L57.9069 9.1844L56.791 18.4641L59.6707 18.7872C60.3294 18.8611 60.8914 18.7479 61.3568 18.4475C61.8221 18.1472 62.0875 17.7243 62.1531 17.179C62.222 16.6055 62.0666 16.114 61.6866 15.7045C61.3066 15.295 60.7873 15.0533 60.1285 14.9794L57.023 14.631L57.2096 13.0797Z"
                fill="#151515"
              />
              <path
                d="M73.3644 11.6196L74.9114 12.2648L71.0969 20.7976L74.8988 22.3832L78.7133 13.8504L80.2602 14.4956L76.4458 23.0284L80.2477 24.6141L84.0621 16.0813L85.6091 16.7265L81.157 26.6858L68.9123 21.5788L73.3644 11.6196Z"
                fill="#151515"
              />
              <path
                d="M89.6186 32.7744C88.8021 32.1126 88.2498 31.3665 87.9619 30.5362C87.6808 29.7053 87.6551 28.8438 87.8847 27.9518C88.1211 27.0591 88.6057 26.191 89.3385 25.3475C90.0714 24.5039 90.8754 23.8887 91.7507 23.5017C92.6328 23.1141 93.5157 22.9709 94.3995 23.072C95.29 23.1725 96.1178 23.5328 96.8829 24.1529C97.3243 24.5107 97.6981 24.9355 98.0043 25.4273C98.3104 25.9191 98.5003 26.4689 98.574 27.0768C98.6507 27.6812 98.5657 28.331 98.3189 29.0264C98.0721 29.7218 97.6149 30.4537 96.9472 31.2222L96.4814 31.7583L89.9487 26.4634L90.8989 25.3696L96.1075 29.5913C96.5111 29.1266 96.7757 28.6345 96.9012 28.1148C97.0303 27.5982 97.0118 27.0928 96.8455 26.5987C96.683 26.1076 96.3663 25.6712 95.8955 25.2896C95.3768 24.8692 94.8194 24.6306 94.2231 24.5737C93.6337 24.5162 93.0655 24.6039 92.5185 24.8367C91.9715 25.0694 91.5008 25.4128 91.1064 25.8667L90.473 26.5959C89.9327 27.2179 89.585 27.8345 89.4299 28.4459C89.2817 29.0567 89.3084 29.6357 89.51 30.1829C89.7147 30.7265 90.0801 31.2114 90.6061 31.6378C90.9482 31.915 91.2976 32.119 91.6542 32.2497C92.0176 32.3798 92.3827 32.4321 92.7496 32.4066C93.1196 32.3776 93.484 32.2648 93.8427 32.0683L94.8026 33.431C94.31 33.7383 93.7707 33.9226 93.1848 33.9837C92.602 34.0412 92.0046 33.9713 91.3926 33.7737C90.7838 33.5726 90.1925 33.2395 89.6186 32.7744Z"
                fill="#151515"
              />
            </svg>
          </NextButtonWhite>
        </MainInfoContainer>
      </MainBlockWrapper>

      <BlockWrapper
        id="Section-1"
        style={{
          height:
            "calc(280px + (791 - 280) * ((100vw - 280px) / (1920 - 280)));",
          width:
            "calc(280px + (1640 - 280) * ((100vw - 280px) / (1920 - 280)))",
          justifyContent: "none",
          margin: "0px auto",
          paddingTop:
            "calc(70px + (125 - 70) * ((100vw - 280px) / (1920 - 280)))",
          overflow: "hidden",
        }}
      >
        <div>
          <InfoWrapper style={{ width: "auto" }} left>
            <Header>Обучающие курсы</Header>
            <Text>
              Сюда нужно что-то к записи. А то я не знаю как заполнить, не шарю
              в бровях
            </Text>
            <Button>ПОСМОТРЕТЬ</Button>
          </InfoWrapper>
          <NextButtonBlack onClick={() => handleClickNext("#Section-2")}>
            <svg
              width="115"
              height="125"
              viewBox="0 0 115 125"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M61.625 56.2075C61.625 55.3791 60.9534 54.7075 60.125 54.7075C59.2966 54.7075 58.625 55.3791 58.625 56.2075L61.625 56.2075ZM59.0643 92.2682C59.6501 92.854 60.5999 92.854 61.1857 92.2682L70.7316 82.7222C71.3174 82.1365 71.3174 81.1867 70.7316 80.6009C70.1458 80.0151 69.1961 80.0151 68.6103 80.6009L60.125 89.0862L51.6397 80.6009C51.0539 80.0151 50.1042 80.0151 49.5184 80.6009C48.9326 81.1867 48.9326 82.1365 49.5184 82.7222L59.0643 92.2682ZM58.625 56.2075L58.625 91.2075L61.625 91.2075L61.625 56.2075L58.625 56.2075Z"
                fill="#151515"
              />
              <path
                d="M110.89 74.2075C110.89 101.237 88.1946 123.208 60.125 123.208C32.0555 123.208 9.36035 101.237 9.36035 74.2075C9.36035 47.178 32.0555 25.2075 60.125 25.2075C88.1946 25.2075 110.89 47.178 110.89 74.2075Z"
                stroke="#151515"
                stroke-width="2"
              />
              <path
                d="M18.2086 26.7612C19.2982 27.8411 20.0448 28.9711 20.4485 30.1511C20.8522 31.3312 20.9293 32.4776 20.6798 33.5902C20.4303 34.7029 19.8689 35.6998 18.9957 36.5809C18.1224 37.462 17.1306 38.0323 16.0202 38.2917C14.9098 38.5511 13.7628 38.4842 12.5791 38.0911C11.3955 37.6979 10.2589 36.9614 9.1693 35.8815C8.07971 34.8016 7.33306 33.6716 6.92937 32.4915C6.52568 31.3115 6.44858 30.1651 6.69807 29.0524C6.94755 27.9397 7.50893 26.9428 8.38219 26.0618C9.25545 25.1807 10.2473 24.6104 11.3577 24.351C12.4681 24.0916 13.6151 24.1584 14.7987 24.5516C15.9824 24.9447 17.119 25.6812 18.2086 26.7612ZM17.0087 27.9718C16.1141 27.0852 15.2108 26.4866 14.2988 26.176C13.39 25.8619 12.526 25.8022 11.7065 25.9967C10.8905 26.1878 10.1725 26.5962 9.5525 27.2217C8.93255 27.8472 8.52899 28.5705 8.34181 29.3916C8.15797 30.2093 8.22544 31.0729 8.54422 31.9821C8.86633 32.888 9.47466 33.7842 10.3692 34.6708C11.2638 35.5574 12.1654 36.1577 13.0741 36.4717C13.9862 36.7824 14.8503 36.8421 15.6663 36.651C16.4857 36.4565 17.2054 36.0465 17.8254 35.421C18.4453 34.7955 18.8472 34.0739 19.0311 33.2561C19.2182 32.435 19.1508 31.5715 18.8287 30.6656C18.5099 29.7563 17.9032 28.8584 17.0087 27.9718Z"
                fill="#151515"
              />
              <path
                d="M36.1124 24.6065C35.1803 25.0275 34.2783 25.17 33.4064 25.0339C32.5344 24.8978 31.7428 24.5254 31.0314 23.9167C30.3201 23.308 29.7403 22.5074 29.292 21.515C28.8359 20.5052 28.619 19.5304 28.6412 18.5903C28.6658 17.6441 28.9141 16.802 29.3861 16.064C29.8604 15.3198 30.5464 14.745 31.4439 14.3396C32.143 14.0239 32.8314 13.8688 33.5093 13.8743C34.1872 13.8799 34.8105 14.0348 35.3792 14.339C35.9478 14.6433 36.4156 15.0866 36.7826 15.669L35.255 16.359C34.9339 15.9585 34.4937 15.6741 33.9345 15.5059C33.3777 15.3313 32.7628 15.3961 32.0896 15.7001C31.4941 15.9691 31.0422 16.3603 30.7337 16.8737C30.4276 17.3808 30.2762 17.9714 30.2793 18.6454C30.2847 19.3131 30.457 20.0224 30.7961 20.7732C31.1431 21.5413 31.566 22.1556 32.0649 22.616C32.5681 23.0745 33.1131 23.3609 33.6999 23.4752C34.2909 23.5875 34.8885 23.5072 35.4926 23.2343C35.8896 23.055 36.2187 22.8232 36.48 22.5389C36.7413 22.2547 36.9256 21.9324 37.033 21.5722C37.1405 21.2119 37.1598 20.8291 37.091 20.4238L38.6186 19.7338C38.7973 20.3596 38.8225 20.9847 38.6941 21.609C38.568 22.2271 38.289 22.7999 37.8571 23.3275C37.4275 23.8488 36.846 24.2752 36.1124 24.6065Z"
                fill="#151515"
              />
              <path
                d="M41.7459 12.2162L41.4288 10.6862L50.1079 8.88729L50.4251 10.4173L46.92 11.1438L48.817 20.2958L47.1757 20.636L45.2788 11.484L41.7459 12.2162Z"
                fill="#151515"
              />
              <path
                d="M57.196 23.2618C56.9119 23.2586 56.6589 23.2321 56.4369 23.1822C56.2149 23.1371 56.0615 23.0928 55.9767 23.0493L56.4194 21.5768C56.8254 21.6856 57.1848 21.7275 57.4976 21.7025C57.8104 21.6776 58.0889 21.5411 58.3332 21.2928C58.5821 21.0494 58.8115 20.6518 59.0213 20.1002L59.3433 19.2514L55.4321 8.2411L57.2502 8.26143L60.1641 16.9878L60.2777 16.989L63.3861 8.33007L65.2042 8.35041L60.434 20.7978C60.2194 21.3589 59.9561 21.8224 59.6443 22.1882C59.3323 22.5588 58.9718 22.8318 58.5626 23.0071C58.1581 23.1826 57.7026 23.2674 57.196 23.2618Z"
                fill="#151515"
              />
              <path
                d="M67.5091 22.4603L68.6459 17.9127L69.5279 18.1332C69.8 17.9621 70.0469 17.7652 70.2686 17.5424C70.4902 17.3196 70.7032 17.0434 70.9076 16.7138C71.1178 16.3808 71.3291 15.9651 71.5415 15.4667C71.7551 14.9637 71.9865 14.3504 72.2357 13.627L73.6412 9.52727L80.3661 11.2084L78.0993 20.2759L79.7254 20.6824L78.5886 25.23L76.9625 24.8235L77.7204 21.7918L69.8931 19.8351L69.1352 22.8668L67.5091 22.4603ZM71.3745 18.5948L76.4732 19.8694L78.361 12.3177L74.7781 11.4221L73.8342 14.0266C73.4426 15.1049 73.0585 16.0362 72.6818 16.8206C72.3052 17.6049 71.8694 18.1963 71.3745 18.5948Z"
                fill="#151515"
              />
              <path
                d="M85.6161 22.2354L94.1858 17.1982L95.8972 18.0942L90.8372 27.7589L89.3523 26.9814L93.2659 19.5064L84.7214 24.5568L82.9847 23.6476L88.0447 13.983L89.5297 14.7604L85.6161 22.2354Z"
                fill="#151515"
              />
              <path
                d="M97.3589 29.4141L106.855 26.4762L108.316 27.7408L101.174 35.9876L99.9072 34.8904L105.431 28.512L95.9557 31.4685L94.4738 30.1853L101.615 21.9385L102.882 23.0357L97.3589 29.4141Z"
                fill="#151515"
              />
            </svg>
          </NextButtonBlack>
        </div>
        <Image3 src="img/Photo3.svg" />
      </BlockWrapper>
      <BlockWrapper
        id="Section-2"
        style={{
          width:
            "calc(280px + (1640 - 280) * ((100vw - 280px) / (1920 - 280)))",
          padding: "0px auto",
          margin: "0px auto",
          paddingTop:
            "calc(70px + (125 - 70) * ((100vw - 280px) / (1920 - 280)))",
          height:
            " calc(557px + (726 - 557) * ((100vw - 280px) / (1920 - 280)))",
        }}
      >
        <div
          style={{
            position: "relative",
            background: "url(img/4.svg) no-repeat center/cover",
            boxShadow: "inset 0 0 0 100vw rgba(0,0,0,.75)",
            width: "100%",
            height: "100%",
          }}
        >
          <div
            style={{
              justifyContent: "space-around",
              boxSizing: "border-box",
              margin:
                "calc(50px + (57 - 50) * ((100vw - 280px) / (1920 - 280))) calc(2px + (140 - 2) * ((100vw - 280px) / (1920 - 280))) ",

              border: "5px solid #FFFFFF",
              borderImage: "url('img/Border.png') round",
              borderImageSlice: "5",
              position: "absolute",
              height: "auto",
              width: "auto",
              bottom: "0",
              top: "0",
              left: "0",
              right: "0",
              color: "white",
              display: "flex",
              flexDirection: "column",
            }}
          >
            <div>
              <img
                src="img/Logo.svg"
                style={{
                  filter: " brightness(0) invert(1)",
                  width:
                    "calc(233px + (403 - 233) * ((100vw - 280px) / (1920 - 280)))",
                  display: "block",
                  margin: " 0 auto",
                }}
              />
            </div>
            <Text
              style={{
                background: "rgba(79, 79, 79, 0.5)",
                width:
                  "calc(270px + (780 - 270) * ((100vw - 280px) / (1920 - 280)))",
                margin: "0 auto",
                fontFamily: "Inter",
                fontStyle: "normal",
                fontWeight: "280",
                lineHeight:
                  "calc(30px + (40 - 30) * ((100vw - 280px) / (1920 - 280)))",
                padding: "15px",
                position: "relative",
              }}
            >
              <img
                src="img/dotes.svg"
                style={{
                  position: "absolute",
                  transform: "rotate(180deg)",
                  top: "-30px",
                  left: "calc(-0px + (-30 - -0) * ((100vw - 280px) / (1920 - 280)))",
                }}
              />
              <img
                src="img/dotes.svg"
                style={{
                  position: "absolute",
                  bottom: "-30px",
                  right:
                    "calc(-0px + (-30 - -0) * ((100vw - 280px) / (1920 - 280)))",
                }}
              />
              Ultrices at tellus dictumst est, scelerisque cras gravida enim
              auctor. Eget nunc dictum cursus nec at. Purus turpis et commodo,
              diam imperdiet. Sed aliquam cursus gravida gravida. Nisl gravida
              at viverra in ut tellus urna curabitur cursus. Ut risus tincidunt
              tincidunt eu porttitor fames.
            </Text>
            <li
              style={{
                fontFamily: "Oranienbaum",
                fontStyle: "normal",
                fontWeight: "280",
                fontSize:
                  "calc(20px + (40 - 20) * ((100vw - 280px) / (1920 - 280)))",
                lineHeight: "80%",
                display: "inline-block",
                margin: "0 auto",
                marginLeft:
                  "calc(0px + (280 - 0) * ((100vw - 280px) / (1920 - 280)))",
              }}
            >
              Александрова Яна
            </li>
          </div>
        </div>
      </BlockWrapper>
      <Header
        style={{
          textAlign: "center",
          width: "auto",
        }}
      >
        Галерея работ
      </Header>
      <Text
        style={{
          textAlign: "center",
          width:
            "calc(280px + (1640 - 280) * ((100vw - 280px) / (1920 - 280)))",
          marginRight: " auto",
          marginLeft: "auto",
        }}
      >
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin sed eget
        turpis vitae tempor.
      </Text>
      <div
        style={{
          width:
            "calc(280px + (1640 - 280) * ((100vw - 280px) / (1920 - 280)))",
          height:
            "calc(572px + (648 - 572) * ((100vw - 280px) / (1920 - 280)))",
          background: "#151515",
          position: "relative",
          margin: " 0px auto",
        }}
      >
        <Slider
          style={{
            height:
              "calc(572px + (648 - 572) * ((100vw - 280px) / (1920 - 280)))",

            padding: "0px auto",
            margin: "0px auto",
          }}
        >
          <Swiper
            hasImage
            id="three-d-overflow-effect"
            effect={"coverflow"}
            grabCursor={true}
            centeredSlides={true}
            slidesPerView={"auto"}
            coverflowEffect={{
              rotate: 40,
              stretch: 0,
              depth: 100,
              modifier: 1,
              slideShadows: true,
            }}
            autoplay={{
              delay: 2500,
              disableOnInteraction: false,
            }}
            loop={true}
            modules={[EffectCoverflow, Autoplay]}
            speed={1300}
            className="mySwiper"
          >
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-1.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-2.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-3.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-5.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-6.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-7.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-8.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-9.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-10.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-11.jpg" />
            </SwiperSlide>
            <SwiperSlide>
              <img src="https://swiperjs.com/demos/images/nature-12.jpg" />
            </SwiperSlide>
          </Swiper>
        </Slider>
      </div>
    </AnimatedPage>
  );
};

export default Main;
